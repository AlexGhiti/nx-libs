commit d650a0b47eadeb675e2d2cf03ad10a4dbc564971
Author: Mike Gabriel <mike.gabriel@das-netzwerkteam.de>
Date:   Thu Jun 23 14:27:15 2016 +0200

OPTFLAGS: Properly propagate build option flags to nxcomp{,ext,shad} and the nx-X11 build scripts.

 Note:

  - The "normal" way to inject CFLAGS (and CPPFLAGS) into nx-X11 builds is copying those
    options over into the variable CDEBUGFLAGS.
  - LDFLAGS have to be handed to nx-X11 via LOCAL_LDFLAGS.

 This change also includes a slight change in the nx-X11 build order.

 Old build order:

  Main Makefile:

      - [...]
      - libNX_X11
        + implicitly building nxcomp
        + implicitly building nxcompext
      - [...]
      - nxagent
        + implicitly building nxcompshad
      - [...]

 New build ordner:

  Main Makefile:

      - [...]
      - nxcomp
      - setup nx-X11 build env
        + cd nx-X11 && make BuildEnv
      - nx-X11/lib/*
      - nxcompext
      - nxcompshad
      - [...]
      - nxagent
      - [...]

 Fixes ArcticaProject/nx-libs#141
 Fixes X2GoBTS#84

 Backported from Arctica GH 3.6.x branch.

 v2: backport to nx-libs 3.5.0.x (Mihai Moldovan)
--- a/nxcomp/Makefile.in
+++ b/nxcomp/Makefile.in
@@ -41,6 +41,8 @@ CXXFLAGS    = @CXXFLAGS@ @X_CFLAGS@ @DEF
 CXXINCLUDES =
 CXXDEFINES  =
 
+CPPFLAGS    = @CPPFLAGS@
+
 #
 # C programs have their own CFLAGS.
 # 
@@ -84,9 +86,9 @@ DEPENDINCLUDES = -I/usr/include/c++ -I/u
 .SUFFIXES: .cpp.c
 
 .cpp.o:
-	$(CXX) -c $(CXXFLAGS) $(CXXINCLUDES) $(CXXDEFINES) $<
+	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $(CXXINCLUDES) $(CXXDEFINES) $<
 .c.o:
-	$(CC) -c $(CCFLAGS) $(CCINCLUDES) $(CCDEFINES) $<
+	$(CC) -c $(CPPFLAGS) $(CCFLAGS) $(CCINCLUDES) $(CCDEFINES) $<
 
 LIBRARY = Xcomp
 
--- a/nxcomp/configure.in
+++ b/nxcomp/configure.in
@@ -7,8 +7,12 @@ AC_PREREQ(2.13)
 
 dnl Set our default compilation flags.
 
-CXXFLAGS="$CXXFLAGS -O3 -fno-rtti -fno-exceptions"
-CFLAGS="$CFLAGS -O3"
+if test "x$CXXFLAGS" = "x"; then
+  CXXFLAGS="-O3 -fno-rtti -fno-exceptions"
+fi
+if test "x$CFLAGS" = "x"; then
+  CFLAGS="$CFLAGS -O3"
+fi
 
 dnl Reset default linking directives.
 
--- a/nxproxy/configure.in
+++ b/nxproxy/configure.in
@@ -7,8 +7,12 @@ AC_PREREQ(2.13)
 
 dnl Reset default compilation flags.
 
-CXXFLAGS="$CXXFLAGS -O3"
-CPPFLAGS="$CPPFLAGS -O3"
+if test "x$CXXFLAGS" == "x"; then
+  CXXFLAGS="-O3"
+fi
+if test "x$CPPFLAGS" == "x"; then
+  CPPFLAGS="-O3"
+fi
 
 dnl Prefer headers and libraries from nx-X11 if present.
 
